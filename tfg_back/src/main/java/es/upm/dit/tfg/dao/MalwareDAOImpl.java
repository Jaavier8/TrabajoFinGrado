package es.upm.dit.tfg.dao;

import java.util.ArrayList;
import java.util.List;

import org.hibernate.Session;

import es.upm.dit.tfg.model.Malware;

public class MalwareDAOImpl implements MalwareDAO{
	private static MalwareDAOImpl instance = null;

	private MalwareDAOImpl() {
	}

	public static MalwareDAOImpl getInstance() {
		if (null == instance)
			instance = new MalwareDAOImpl();
		return instance;
	}
	
	@Override
	public Malware create(Malware malware) {
		Session session = SessionFactoryService.get().openSession();
		session.beginTransaction();
		try {
			session.save(malware);
		} catch (Exception e) {
			malware = null;
		}
		session.getTransaction().commit();
		session.close();
		return malware;
	}

	@Override
	public Malware read(Long identifier) {
		Session session = SessionFactoryService.get().openSession();
		session.beginTransaction();
		Malware malware = session.get(Malware.class, identifier);
		session.getTransaction().commit();
		session.close();
		return malware;
	}

	@Override
	public Malware update(Malware malware) {
		Session session = SessionFactoryService.get().openSession();
		session.beginTransaction();
		session.saveOrUpdate(malware);
		session.getTransaction().commit();
		session.close();
		return malware;
	}

	@Override
	public Malware delete(Malware malware) {
		Session session = SessionFactoryService.get().openSession();
		session.beginTransaction();
		session.delete(malware);
		session.getTransaction().commit();
		session.close();
		return malware;
	}

	@Override
	public List<Malware> readAll() {
		List<Malware> allMalwar = new ArrayList<Malware>();
		Session session = SessionFactoryService.get().openSession();
		session.beginTransaction();
		allMalwar.addAll(session.createQuery("from Malware").list());
		session.getTransaction().commit();
		session.close();
		return allMalwar;
	}

}
