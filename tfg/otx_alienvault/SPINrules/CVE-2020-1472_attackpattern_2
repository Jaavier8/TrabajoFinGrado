CONSTRUCT {
          ?newap a cyberthreat_STIX:Attack_Pattern.
          ?newap cibersituational-ontology:name 'Restful Privilege Elevation'.
          ?newap cyberthreat_STIX:description 'Rest uses standard HTTP (Get, Put, Delete) style permissions methods, but these are not necessarily correlated generally with back end programs. Strict interpretation of HTTP get methods means that these HTTP Get services should not be used to delete information on the server, but there is no access control mechanism to back up this logic. This means that unless the services are properly ACL'd and the application's service implementation are following these guidelines then an HTTP request can easily execute a delete or update on the server side. The attacker identifies a HTTP Get URL such as http://victimsite/updateOrder, which calls out to a program to update orders on a database or other resource. The URL is not idempotent so the request can be submitted multiple times by the attacker, additionally, the attacker may be able to exploit the URL published as a Get method that actually performs updates (instead of merely retrieving data). This may result in malicious or inadvertent altering of data on the server.'.
          ?newap cyberthreat_STIX:uses ?m.
          ?m cyberthreat_STIX:isUsedBy ?newap
          ?newap cyberthreat_STIX:targets ?v .
        }
        WHERE{
          ?v a cyberthreat_STIX:Vulnerability.
          ?m a cyberthreat_STIX:Malware.
          ?v cibersituational-ontology:name 'CVE-2020-1472'.
          ?m cibersituational-ontology:name 'Cobalt Strike'.
          BIND(URI(cyberthreat_STIX:Attack_Pattern3) as ?newap)
        }