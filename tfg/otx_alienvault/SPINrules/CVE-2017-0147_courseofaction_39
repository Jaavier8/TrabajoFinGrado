CONSTRUCT{
        	?newca a cyberthreat_STIX:Course_of_Action.
        	?newca cyberthreat_STIX:description Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL. When client input is required from web-based forms, avoid using the "GET" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the "POST method whenever possible. There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx) Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section) Test your path decoding process against malicious input. In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access. Assume all input is malicious. Create a white list that defines all valid input to the application based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. .
            ?newca cyberthreat_DRM:mitigates ?ap.
            ?newca cyberthreat_DRM:mitigates ?m.
            ?newca cyberthreat_STIX:remediates ?v.
            ?newca cyberthreat_STIX:remediates ?m.
            ?m cibersituational-ontology:isMitigatedBy ?newca.
        }
        WHERE{
        	?v a cyberthreat_STIX:Vulnerability.
            ?m a cyberthreat_STIX:Malware.
            ?ap a cyberthreat_STIX:Attack_Pattern.
        	?v cibersituational-ontology:name CVE-2017-0147.
            ?m cibersituational-ontology:name Matanbuchus.
            ?m cibersituational-ontology:name Using Slashes in Alternate Encoding.
        }